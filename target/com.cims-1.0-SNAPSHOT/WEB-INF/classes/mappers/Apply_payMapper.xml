<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd">
<mapper namespace="com.cims.dao.Apply_payMapper">
  <resultMap id="BaseResultMap" type="com.cims.entity.Apply_pay">
    <constructor>
      <idArg column="id" javaType="java.lang.Integer" jdbcType="INTEGER" />
      <arg column="student_id" javaType="java.lang.Integer" jdbcType="INTEGER" />
      <arg column="course_id" javaType="java.lang.Integer" jdbcType="INTEGER" />
      <arg column="pay_student" javaType="java.lang.String" jdbcType="VARCHAR" />
      <arg column="pay_amount" javaType="java.lang.String" jdbcType="VARCHAR" />
      <arg column="pay_time" javaType="java.util.Date" jdbcType="TIMESTAMP" />
      <arg column="hour" javaType="java.lang.Integer" jdbcType="INTEGER" />
      <arg column="surplus_hour" javaType="java.lang.Integer" jdbcType="INTEGER" />
      <arg column="create_time" javaType="java.util.Date" jdbcType="TIMESTAMP" />
      <arg column="update_time" javaType="java.util.Date" jdbcType="TIMESTAMP" />
    </constructor>
  </resultMap>
  <sql id="Base_Column_List">
    id, student_id, course_id, pay_student, pay_amount, pay_time, `hour`, surplus_hour,
    create_time, update_time
  </sql>
  <select id="selectByPrimaryKey" parameterType="java.lang.Integer" resultMap="BaseResultMap">
    select 
    <include refid="Base_Column_List" />
    from apply_pay
    where id = #{id,jdbcType=INTEGER}
  </select>
  <delete id="deleteByPrimaryKey" parameterType="java.lang.Integer">
    delete from apply_pay
    where id = #{id,jdbcType=INTEGER}
  </delete>
  <insert id="insert" parameterType="com.cims.entity.Apply_pay">
    insert into apply_pay (id, student_id, course_id, 
      pay_student, pay_amount, pay_time, 
      surplus_hour, create_time,
      update_time)
    values (#{id,jdbcType=INTEGER}, #{studentId,jdbcType=INTEGER}, #{courseId,jdbcType=INTEGER}, 
      #{payStudent,jdbcType=VARCHAR}, #{payAmount,jdbcType=VARCHAR}, #{payTime,jdbcType=TIMESTAMP},
      #{surplusHour,jdbcType=INTEGER}, NOW(),
      #{updateTime,jdbcType=TIMESTAMP})
  </insert>
  <insert id="insertSelective" parameterType="com.cims.entity.Apply_pay">
    insert into apply_pay
    <trim prefix="(" suffix=")" suffixOverrides=",">
      <if test="id != null">
        id,
      </if>
      <if test="studentId != null">
        student_id,
      </if>
      <if test="courseId != null">
        course_id,
      </if>
      <if test="payStudent != null">
        pay_student,
      </if>
      <if test="payAmount != null">
        pay_amount,
      </if>
      <if test="payTime != null">
        pay_time,
      </if>
      <if test="hour != null">
        hour,
      </if>
      <if test="surplusHour != null">
        surplus_hour,
      </if>
      <if test="createTime != null">
        create_time,
      </if>
      <if test="updateTime != null">
        update_time,
      </if>
    </trim>
    <trim prefix="values (" suffix=")" suffixOverrides=",">
      <if test="id != null">
        #{id,jdbcType=INTEGER},
      </if>
      <if test="studentId != null">
        #{studentId,jdbcType=INTEGER},
      </if>
      <if test="courseId != null">
        #{courseId,jdbcType=INTEGER},
      </if>
      <if test="payStudent != null">
        #{payStudent,jdbcType=VARCHAR},
      </if>
      <if test="payAmount != null">
        #{payAmount,jdbcType=VARCHAR},
      </if>
      <if test="payTime != null">
        #{payTime,jdbcType=VARCHAR},
      </if>
      <if test="hour != null">
        #{hour,jdbcType=INTEGER},
      </if>
      <if test="surplusHour != null">
        #{surplusHour,jdbcType=INTEGER},
      </if>
      <if test="createTime != null">
        #{createTime,jdbcType=TIMESTAMP},
      </if>
      <if test="updateTime != null">
        #{updateTime,jdbcType=TIMESTAMP},
      </if>
    </trim>
  </insert>
  <update id="updateByPrimaryKeySelective" parameterType="com.cims.entity.Apply_pay">
    update apply_pay
    <set>
      <if test="studentId != null">
        student_id = #{studentId,jdbcType=INTEGER},
      </if>
      <if test="courseId != null">
        course_id = #{courseId,jdbcType=INTEGER},
      </if>
      <if test="payStudent != null">
        pay_student = #{payStudent,jdbcType=VARCHAR},
      </if>
      <if test="payAmount != null">
        pay_amount = #{payAmount,jdbcType=VARCHAR},
      </if>
      <if test="payTime != null">
        pay_time = #{payTime,jdbcType=VARCHAR},
      </if>
      <if test="hour != null">
        hour = #{hour,jdbcType=INTEGER},
      </if>
      <if test="surplusHour != null">
        surplus_hour = #{surplusHour,jdbcType=INTEGER},
      </if>
      <if test="createTime != null">
        create_time = #{createTime,jdbcType=TIMESTAMP},
      </if>
      <if test="updateTime != null">
        update_time = #{updateTime,jdbcType=TIMESTAMP},
      </if>
    </set>
    where id = #{id,jdbcType=INTEGER}
  </update>
  <update id="updateByPrimaryKey" parameterType="com.cims.entity.Apply_pay">
    update apply_pay
    set
      course_id = #{courseId,jdbcType=INTEGER},
      pay_student = #{payStudent,jdbcType=VARCHAR},
      pay_amount = #{payAmount,jdbcType=VARCHAR},
      pay_time = #{payTime,jdbcType=TIMESTAMP},
      hour = #{hour,jdbcType=INTEGER},
      surplus_hour = #{surplusHour,jdbcType=INTEGER},
      update_time = NOW()
    where id = #{id,jdbcType=INTEGER}
  </update>

  <select id="selectByMap" parameterType="Map" resultMap="BaseResultMap">
    select
    <include refid="Base_Column_List" />
    from `apply_pay`
    where 1=1
    <if test="keyword != null and keyword.trim() != ''">
      and `student_id` LIKE CONCAT(CONCAT('%', #{keyword}), '%')
    </if>
  </select>

  <select id="selectByStudentId" parameterType="java.lang.Integer" resultMap="BaseResultMap">
    select
    <include refid="Base_Column_List" />
    from apply_pay
    where student_id = #{studentId,jdbcType=INTEGER} ORDER BY create_time DESC
  </select>


  <select id="selectByCourseId" parameterType="java.lang.Integer" resultMap="BaseResultMap">
    select
    <include refid="Base_Column_List" />
    from apply_pay
    where course_id = #{courseId,jdbcType=INTEGER} ORDER BY create_time ASC
  </select>
</mapper>